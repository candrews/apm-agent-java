name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.asciidoc'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.asciidoc'

env:
  MAVEN_CONFIG: "-V -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttps.protocols=TLSv1.2 -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=25"
  JAVA_VERSION: 17
  JAVA_DIST: adopt

# limit the access of the generated GITHUB_TOKEN
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GOAL: clean install -DskipTests=true -Dmaven.javadoc.skip=true
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DIST }}
          cache: 'maven'
      # Fetch dependencies with a retry
      - run: ./mvnw $GOAL
        id: fetch-deps
        continue-on-error: true
      - run: ./mvnw $GOAL
        if: steps.fetch-deps.outcome == 'failure'
      - name: Zip artifact
        run: zip build.zip ./* -r
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build.zip

  license:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: ./.github/workflows/build
        with:
          artifact-name: build
          goal: ./mvnw org.codehaus.mojo:license-maven-plugin:aggregate-third-party-report -Dlicense.excludedGroups=^co\\.elastic\\.

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: ./.github/workflows/build
        with:
          artifact-name: build
          goal: ./mvnw test

  non-app-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: ./.github/workflows/build
        with:
          artifact-name: build
          goal: ./mvnw -q -P ci-non-application-server-integration-tests verify

  app-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: ./.github/workflows/build
        with:
          artifact-name: build
          goal: ./mvnw -q -P ci-application-server-integration-tests verify

  javadoc:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: ./.github/workflows/build
        with:
          artifact-name: build
          goal: ./mvnw compile javadoc:javadoc

  windows-test:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: ./.github/workflows/build
        with:
          artifact-name: build
          goal: ./mvnw test
          shell: 'pwsh'

  comp-jdk-test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        version: [11, 19]
    steps:
      - uses: ./.github/workflows/build
        with:
          artifact-name: build
          goal: ./mvnw test
          version: ${{ matrix.version }}
